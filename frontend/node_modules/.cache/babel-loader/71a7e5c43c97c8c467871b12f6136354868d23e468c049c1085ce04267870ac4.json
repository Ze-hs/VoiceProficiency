{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcript = _ref => {\n  _s();\n  let {\n    audioPlayerRef\n  } = _ref;\n  const [transcript, setTranscript] = useState([]);\n  const wordsRef = useRef(null);\n  const [highlightPos, setHighlightPos] = useState(null);\n  const highlightRef = useRef(null);\n  useEffect(() => {\n    setTranscript(utils.formatTranscript(transcriptData.segments));\n  }, []);\n  useEffect(() => {\n    const playerCur = audioPlayerRef.current;\n    const ontimeupdate = () => {\n      const activeWordIndex = transcript.findIndex(word => {\n        return word.start > audioPlayerRef.current.currentTime;\n      });\n      if (activeWordIndex !== -1) {\n        const activeWord = wordsRef.current.childNodes[activeWordIndex];\n        // setHighlightPos(getWordProperty(activeWord));\n        const a = {};\n        console.log(highlightRef.current.style);\n        console.log(getWordProperty(activeWord));\n        Object.assign(highlightRef.current.style, getWordProperty(activeWord));\n        Object.assign(a, getWordProperty(activeWord));\n        console.log(a);\n      }\n\n      // activeWord.classList.add(\"active-word\");\n    };\n\n    if (audioPlayerRef && audioPlayerRef.current) {\n      playerCur.addEventListener(\"timeupdate\", ontimeupdate);\n    }\n    return () => {\n      playerCur.removeEventListener(\"timeupdate\", ontimeupdate);\n    };\n  }, [audioPlayerRef, transcript]);\n  const getWordProperty = _ref2 => {\n    let {\n      offsetWidth,\n      offsetHeight,\n      offsetTop,\n      offsetLeft\n    } = _ref2;\n    return {\n      width: offsetWidth,\n      height: offsetHeight,\n      top: offsetTop,\n      left: offsetLeft\n    };\n  };\n  const getConfidenceStyle = confidence => {\n    // return confidence;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      ref: wordsRef,\n      children: data.segments.map(wordsArr => wordsArr.words.map(words => /*#__PURE__*/_jsxDEV(\"span\", {\n        className: getConfidenceStyle(words.probability),\n        children: words.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlight\",\n      ref: highlightRef\n      // style={{ ...highlightPos }}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n_s(Transcript, \"0QuBDt8cxcy67WUsR2X/PxaOvDY=\");\n_c = Transcript;\nexport default Transcript;\nvar _c;\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"names":["React","useEffect","useRef","useState","transcriptData","utils","data","Transcript","audioPlayerRef","transcript","setTranscript","wordsRef","highlightPos","setHighlightPos","highlightRef","formatTranscript","segments","playerCur","current","ontimeupdate","activeWordIndex","findIndex","word","start","currentTime","activeWord","childNodes","a","console","log","style","getWordProperty","Object","assign","addEventListener","removeEventListener","offsetWidth","offsetHeight","offsetTop","offsetLeft","width","height","top","left","getConfidenceStyle","confidence","position","map","wordsArr","words","probability"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\n\nconst Transcript = ({ audioPlayerRef }) => {\n\tconst [transcript, setTranscript] = useState([]);\n\tconst wordsRef = useRef(null);\n\tconst [highlightPos, setHighlightPos] = useState(null);\n\tconst highlightRef = useRef(null);\n\n\tuseEffect(() => {\n\t\tsetTranscript(utils.formatTranscript(transcriptData.segments));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst playerCur = audioPlayerRef.current;\n\t\tconst ontimeupdate = () => {\n\t\t\tconst activeWordIndex = transcript.findIndex((word) => {\n\t\t\t\treturn word.start > audioPlayerRef.current.currentTime;\n\t\t\t});\n\n\t\t\tif (activeWordIndex !== -1) {\n\t\t\t\tconst activeWord = wordsRef.current.childNodes[activeWordIndex];\n\t\t\t\t// setHighlightPos(getWordProperty(activeWord));\n\t\t\t\tconst a = {};\n\t\t\t\tconsole.log(highlightRef.current.style);\n\t\t\t\tconsole.log(getWordProperty(activeWord));\n\t\t\t\tObject.assign(\n\t\t\t\t\thighlightRef.current.style,\n\t\t\t\t\tgetWordProperty(activeWord)\n\t\t\t\t);\n\n\t\t\t\tObject.assign(a, getWordProperty(activeWord));\n\n\t\t\t\tconsole.log(a);\n\t\t\t}\n\n\t\t\t// activeWord.classList.add(\"active-word\");\n\t\t};\n\n\t\tif (audioPlayerRef && audioPlayerRef.current) {\n\t\t\tplayerCur.addEventListener(\"timeupdate\", ontimeupdate);\n\t\t}\n\n\t\treturn () => {\n\t\t\tplayerCur.removeEventListener(\"timeupdate\", ontimeupdate);\n\t\t};\n\t}, [audioPlayerRef, transcript]);\n\n\tconst getWordProperty = ({\n\t\toffsetWidth,\n\t\toffsetHeight,\n\t\toffsetTop,\n\t\toffsetLeft,\n\t}) => {\n\t\treturn {\n\t\t\twidth: offsetWidth,\n\t\t\theight: offsetHeight,\n\t\t\ttop: offsetTop,\n\t\t\tleft: offsetLeft,\n\t\t};\n\t};\n\n\tconst getConfidenceStyle = (confidence) => {\n\t\t// return confidence;\n\t};\n\n\treturn (\n\t\t<div style={{ position: \"relative\" }}>\n\t\t\t<span ref={wordsRef}>\n\t\t\t\t{data.segments.map((wordsArr) =>\n\t\t\t\t\twordsArr.words.map((words) => (\n\t\t\t\t\t\t<span className={getConfidenceStyle(words.probability)}>\n\t\t\t\t\t\t\t{words.word}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t</span>\n\t\t\t<div\n\t\t\t\tclassName=\"highlight\"\n\t\t\t\tref={highlightRef}\n\t\t\t\t// style={{ ...highlightPos }}\n\t\t\t></div>\n\t\t</div>\n\t);\n};\n\nexport default Transcript;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcript = _ref => {\n  _s();\n  let {\n    audioPlayerRef\n  } = _ref;\n  // console.log(data);\n  // console.log(\"hi\");\n\n  // console.log(JSON.parse(segments));\n\n  // data.segments.map((wordsArr) =>\n  // \twordsArr.words.map((words) => console.log(words.word))\n  // );\n\n  const [transcript, setTranscript] = useState([]);\n  const wordsRef = useRef(null);\n  useEffect(() => {\n    setTranscript(utils.formatTranscript(transcriptData.segments));\n    console.log(wordsRef.current.children);\n  }, []);\n  useEffect(() => {\n    console.log(transcript);\n    const ontimeupdate = () => {\n      const activeWordIndex = transcript.findIndex(word => {\n        return word.start > audioPlayerRef.current.currentTime;\n      });\n    };\n    if (audioPlayerRef && audioPlayerRef.current) {\n      audioPlayerRef.current.addEventListener(\"timeupdate\", ontimeupdate);\n    }\n  }, [audioPlayerRef, transcript]);\n  const getConfidenceStyle = confidence => {\n    // return confidence;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wordsRef,\n    children: data.segments.map(wordsArr => wordsArr.words.map(words => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: getConfidenceStyle(words.probability),\n      children: words.word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n_s(Transcript, \"C9a/vWkpfGY4BRG8SepUNG4q2d8=\");\n_c = Transcript;\nexport default Transcript;\nvar _c;\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"names":["React","useEffect","useRef","useState","transcriptData","utils","data","Transcript","audioPlayerRef","transcript","setTranscript","wordsRef","formatTranscript","segments","console","log","current","children","ontimeupdate","activeWordIndex","findIndex","word","start","currentTime","addEventListener","getConfidenceStyle","confidence","map","wordsArr","words","probability"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\n\nconst Transcript = ({ audioPlayerRef }) => {\n\t// console.log(data);\n\t// console.log(\"hi\");\n\n\t// console.log(JSON.parse(segments));\n\n\t// data.segments.map((wordsArr) =>\n\t// \twordsArr.words.map((words) => console.log(words.word))\n\t// );\n\n\tconst [transcript, setTranscript] = useState([]);\n\tconst wordsRef = useRef(null);\n\tuseEffect(() => {\n\t\tsetTranscript(utils.formatTranscript(transcriptData.segments));\n\t\tconsole.log(wordsRef.current.children);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconsole.log(transcript);\n\n\t\tconst ontimeupdate = () => {\n\t\t\tconst activeWordIndex = transcript.findIndex((word) => {\n\t\t\t\treturn word.start > audioPlayerRef.current.currentTime;\n\t\t\t});\n\t\t};\n\n\t\tif (audioPlayerRef && audioPlayerRef.current) {\n\t\t\taudioPlayerRef.current.addEventListener(\"timeupdate\", ontimeupdate);\n\t\t}\n\t}, [audioPlayerRef, transcript]);\n\n\tconst getConfidenceStyle = (confidence) => {\n\t\t// return confidence;\n\t};\n\n\treturn (\n\t\t<div ref={wordsRef}>\n\t\t\t{data.segments.map((wordsArr) =>\n\t\t\t\twordsArr.words.map((words) => (\n\t\t\t\t\t<span className={getConfidenceStyle(words.probability)}>\n\t\t\t\t\t\t{words.word}\n\t\t\t\t\t</span>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Transcript;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,KAAK,MAAM,iBAAiB;AACnC;AACA,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAExC,MAAMC,UAAU,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EACrC;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMQ,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7BD,SAAS,CAAC,MAAM;IACfS,aAAa,CAACL,KAAK,CAACO,gBAAgB,CAACR,cAAc,CAACS,QAAQ,CAAC,CAAC;IAC9DC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,OAAO,CAACC,QAAQ,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACfa,OAAO,CAACC,GAAG,CAACN,UAAU,CAAC;IAEvB,MAAMS,YAAY,GAAG,MAAM;MAC1B,MAAMC,eAAe,GAAGV,UAAU,CAACW,SAAS,CAAEC,IAAI,IAAK;QACtD,OAAOA,IAAI,CAACC,KAAK,GAAGd,cAAc,CAACQ,OAAO,CAACO,WAAW;MACvD,CAAC,CAAC;IACH,CAAC;IAED,IAAIf,cAAc,IAAIA,cAAc,CAACQ,OAAO,EAAE;MAC7CR,cAAc,CAACQ,OAAO,CAACQ,gBAAgB,CAAC,YAAY,EAAEN,YAAY,CAAC;IACpE;EACD,CAAC,EAAE,CAACV,cAAc,EAAEC,UAAU,CAAC,CAAC;EAEhC,MAAMgB,kBAAkB,GAAIC,UAAU,IAAK;IAC1C;EAAA,CACA;EAED,oBACC;IAAK,GAAG,EAAEf,QAAS;IAAA,UACjBL,IAAI,CAACO,QAAQ,CAACc,GAAG,CAAEC,QAAQ,IAC3BA,QAAQ,CAACC,KAAK,CAACF,GAAG,CAAEE,KAAK,iBACxB;MAAM,SAAS,EAAEJ,kBAAkB,CAACI,KAAK,CAACC,WAAW,CAAE;MAAA,UACrDD,KAAK,CAACR;IAAI;MAAA;MAAA;MAAA;IAAA,QAEZ,CAAC;EACF;IAAA;IAAA;IAAA;EAAA,QACI;AAER,CAAC;AAAC,GA9CId,UAAU;AAAA,KAAVA,UAAU;AAgDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport utils from \"../utils/helper\";\nimport audioService from \"../services/audio\";\n\n//Possibly delete this\nimport \"./text.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_ref, ref) => {\n  _s();\n  let {\n    audioName\n  } = _ref;\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const audioPlayer = useRef(null);\n  useImperativeHandle(ref, () => audioPlayer.current);\n  useEffect(() => {\n    if (audioName) {\n      audioService.getAudio(audioName).then(data => {\n        const blob = new Blob([data], {\n          type: \"audio/ogg\"\n        });\n        const url = URL.createObjectURL(blob);\n        setAudioUrl(url);\n      }).catch(error => {\n        console.log(\"error fetching url\", error);\n      });\n    }\n\n    //Clean up the blob url when dismounting\n    return () => {\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    };\n  }, [audioName]);\n  const handlePlayClick = () => {\n    setIsPlaying(!isPlaying);\n    isPlaying ? audioPlayer.current.pause() : audioPlayer.current.play();\n  };\n  const onLoadedMetadata = () => {\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n  };\n  const updateCurrentTime = event => {\n    setCurrentTime(event.currentTarget.currentTime);\n  };\n  const onProgressBarChange = event => {\n    audioPlayer.current.currentTime = event.target.value;\n  };\n\n  // if (!audioUrl) {\n  // \treturn <div>No audio found</div>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"audioPlayer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioPlayer,\n      onTimeUpdate: updateCurrentTime,\n      src: audioUrl,\n      type: \"audio/ogg\"\n      //Wait for metadata before setting duration\n      ,\n      preload: \"metadata\",\n      onLoadedMetadata: onLoadedMetadata,\n      onEnded: handlePlayClick,\n      children: \"cannot play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayClick,\n        children: isPlaying ? \"pause\" : \"play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: utils.formatTime(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        className: \"audio-progress\",\n        value: currentTime,\n        onInput: onProgressBarChange,\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: utils.formatTime(duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}, \"i//xhMCD5WK1ie1bkp5fCTyd8Zc=\")), \"i//xhMCD5WK1ie1bkp5fCTyd8Zc=\");\n_c2 = AudioPlayer;\nexport default AudioPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AudioPlayer$forwardRef\");\n$RefreshReg$(_c2, \"AudioPlayer\");","map":{"version":3,"names":["React","forwardRef","useEffect","useImperativeHandle","useRef","useState","utils","audioService","AudioPlayer","ref","audioName","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioUrl","setAudioUrl","audioPlayer","current","getAudio","then","data","blob","Blob","type","url","URL","createObjectURL","catch","error","console","log","revokeObjectURL","handlePlayClick","pause","play","onLoadedMetadata","seconds","Math","floor","updateCurrentTime","event","currentTarget","onProgressBarChange","target","value","formatTime","width"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/AudioPlayer.js"],"sourcesContent":["import React, {\n\tforwardRef,\n\tuseEffect,\n\tuseImperativeHandle,\n\tuseRef,\n\tuseState,\n} from \"react\";\nimport utils from \"../utils/helper\";\n\nimport audioService from \"../services/audio\";\n\n//Possibly delete this\nimport \"./text.css\";\n\nconst AudioPlayer = forwardRef(({ audioName }, ref) => {\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [duration, setDuration] = useState(0);\n\tconst [currentTime, setCurrentTime] = useState(0);\n\tconst [audioUrl, setAudioUrl] = useState(null);\n\tconst audioPlayer = useRef(null);\n\n\tuseImperativeHandle(ref, () => audioPlayer.current);\n\n\tuseEffect(() => {\n\t\tif (audioName) {\n\t\t\taudioService\n\t\t\t\t.getAudio(audioName)\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconst blob = new Blob([data], { type: \"audio/ogg\" });\n\t\t\t\t\tconst url = URL.createObjectURL(blob);\n\t\t\t\t\tsetAudioUrl(url);\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"error fetching url\", error);\n\t\t\t\t});\n\t\t}\n\n\t\t//Clean up the blob url when dismounting\n\t\treturn () => {\n\t\t\tif (audioUrl) {\n\t\t\t\tURL.revokeObjectURL(audioUrl);\n\t\t\t}\n\t\t};\n\t}, [audioName]);\n\n\tconst handlePlayClick = () => {\n\t\tsetIsPlaying(!isPlaying);\n\t\tisPlaying ? audioPlayer.current.pause() : audioPlayer.current.play();\n\t};\n\n\tconst onLoadedMetadata = () => {\n\t\tconst seconds = Math.floor(audioPlayer.current.duration);\n\t\tsetDuration(seconds);\n\t};\n\n\tconst updateCurrentTime = (event) => {\n\t\tsetCurrentTime(event.currentTarget.currentTime);\n\t};\n\n\tconst onProgressBarChange = (event) => {\n\t\taudioPlayer.current.currentTime = event.target.value;\n\t};\n\n\t// if (!audioUrl) {\n\t// \treturn <div>No audio found</div>;\n\t// }\n\n\treturn (\n\t\t<>\n\t\t\t<div>audioPlayer</div>\n\t\t\t<audio\n\t\t\t\tref={audioPlayer}\n\t\t\t\tonTimeUpdate={updateCurrentTime}\n\t\t\t\tsrc={audioUrl}\n\t\t\t\ttype=\"audio/ogg\"\n\t\t\t\t//Wait for metadata before setting duration\n\t\t\t\tpreload=\"metadata\"\n\t\t\t\tonLoadedMetadata={onLoadedMetadata}\n\t\t\t\tonEnded={handlePlayClick}\n\t\t\t>\n\t\t\t\tcannot play\n\t\t\t</audio>\n\n\t\t\t<div>\n\t\t\t\t<button onClick={handlePlayClick}>\n\t\t\t\t\t{isPlaying ? \"pause\" : \"play\"}\n\t\t\t\t</button>\n\n\t\t\t\t<p>{utils.formatTime(currentTime)}</p>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tclassName=\"audio-progress\"\n\t\t\t\t\tvalue={currentTime}\n\t\t\t\t\tonInput={onProgressBarChange}\n\t\t\t\t\tstyle={{ width: \"100%\" }}\n\t\t\t\t></input>\n\t\t\t\t<p>{utils.formatTime(duration)}</p>\n\t\t\t</div>\n\t\t</>\n\t);\n});\n\nexport default AudioPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
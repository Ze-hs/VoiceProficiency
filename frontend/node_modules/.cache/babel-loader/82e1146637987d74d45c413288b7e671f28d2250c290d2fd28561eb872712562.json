{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport transcriptService from \"../services/transcript\";\nimport util from \"../utils/helper\";\nconst transcriptSlice = createSlice({\n  name: \"transcript\",\n  initialState: {\n    all: [],\n    current: null,\n    url: null\n  },\n  reducers: {\n    setTranscriptst(state, action) {\n      return {\n        ...state,\n        all: action.payload\n      };\n    },\n    setCurrentTranscript(state, action) {\n      return {\n        ...state,\n        current: action.payload\n      };\n    },\n    setUrl(state, action) {\n      return {\n        ...state,\n        url: action.payload\n      };\n    }\n  }\n});\nexport const {\n  setTranscriptst,\n  setCurrentTranscript,\n  setUrl\n} = transcriptSlice.actions;\nexport const setTranscriptList = () => {\n  return async dispatch => {\n    const audioList = await transcriptService.getAll();\n    dispatch(setTranscriptst(audioList));\n  };\n};\nexport const setTranscript = transcriptName => {\n  return async (dispatch, state) => {\n    const basename = util.formatFileName(transcriptName);\n    console.log(\"inside actions:\", state);\n    dispatch(setCurrentTranscript(transcriptName));\n  };\n};\nexport const setTranscriptUrl = transcriptName => {\n  return async (dispatch, state) => {\n    const transcript = await transcriptService.getTranscript(transcriptName);\n    dispatch(setCurrentTranscript(transcript));\n  };\n};\nexport default transcriptSlice.reducer;","map":{"version":3,"names":["createSlice","transcriptService","util","transcriptSlice","name","initialState","all","current","url","reducers","setTranscriptst","state","action","payload","setCurrentTranscript","setUrl","actions","setTranscriptList","dispatch","audioList","getAll","setTranscript","transcriptName","basename","formatFileName","console","log","setTranscriptUrl","transcript","getTranscript","reducer"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/reducers/transcriptReducer.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport transcriptService from \"../services/transcript\";\nimport util from \"../utils/helper\";\nconst transcriptSlice = createSlice({\n\tname: \"transcript\",\n\tinitialState: {\n\t\tall: [],\n\t\tcurrent: null,\n\t\turl: null,\n\t},\n\treducers: {\n\t\tsetTranscriptst(state, action) {\n\t\t\treturn { ...state, all: action.payload };\n\t\t},\n\n\t\tsetCurrentTranscript(state, action) {\n\t\t\treturn { ...state, current: action.payload };\n\t\t},\n\n\t\tsetUrl(state, action) {\n\t\t\treturn { ...state, url: action.payload };\n\t\t},\n\t},\n});\n\nexport const { setTranscriptst, setCurrentTranscript, setUrl } =\n\ttranscriptSlice.actions;\n\nexport const setTranscriptList = () => {\n\treturn async (dispatch) => {\n\t\tconst audioList = await transcriptService.getAll();\n\t\tdispatch(setTranscriptst(audioList));\n\t};\n};\n\nexport const setTranscript = (transcriptName) => {\n\treturn async (dispatch, state) => {\n\t\tconst basename = util.formatFileName(transcriptName);\n\n\t\tconsole.log(\"inside actions:\", state);\n\t\tdispatch(setCurrentTranscript(transcriptName));\n\t};\n};\n\nexport const setTranscriptUrl = (transcriptName) => {\n\treturn async (dispatch, state) => {\n\t\tconst transcript = await transcriptService.getTranscript(\n\t\t\ttranscriptName\n\t\t);\n\t\tdispatch(setCurrentTranscript(transcript));\n\t};\n};\n\nexport default transcriptSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,MAAMC,eAAe,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IACbC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,IAAI;IACbC,GAAG,EAAE;EACN,CAAC;EACDC,QAAQ,EAAE;IACTC,eAAe,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC9B,OAAO;QAAE,GAAGD,KAAK;QAAEL,GAAG,EAAEM,MAAM,CAACC;MAAQ,CAAC;IACzC,CAAC;IAEDC,oBAAoB,CAACH,KAAK,EAAEC,MAAM,EAAE;MACnC,OAAO;QAAE,GAAGD,KAAK;QAAEJ,OAAO,EAAEK,MAAM,CAACC;MAAQ,CAAC;IAC7C,CAAC;IAEDE,MAAM,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACrB,OAAO;QAAE,GAAGD,KAAK;QAAEH,GAAG,EAAEI,MAAM,CAACC;MAAQ,CAAC;IACzC;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,eAAe;EAAEI,oBAAoB;EAAEC;AAAO,CAAC,GAC7DZ,eAAe,CAACa,OAAO;AAExB,OAAO,MAAMC,iBAAiB,GAAG,MAAM;EACtC,OAAO,MAAOC,QAAQ,IAAK;IAC1B,MAAMC,SAAS,GAAG,MAAMlB,iBAAiB,CAACmB,MAAM,EAAE;IAClDF,QAAQ,CAACR,eAAe,CAACS,SAAS,CAAC,CAAC;EACrC,CAAC;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAIC,cAAc,IAAK;EAChD,OAAO,OAAOJ,QAAQ,EAAEP,KAAK,KAAK;IACjC,MAAMY,QAAQ,GAAGrB,IAAI,CAACsB,cAAc,CAACF,cAAc,CAAC;IAEpDG,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEf,KAAK,CAAC;IACrCO,QAAQ,CAACJ,oBAAoB,CAACQ,cAAc,CAAC,CAAC;EAC/C,CAAC;AACF,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAIL,cAAc,IAAK;EACnD,OAAO,OAAOJ,QAAQ,EAAEP,KAAK,KAAK;IACjC,MAAMiB,UAAU,GAAG,MAAM3B,iBAAiB,CAAC4B,aAAa,CACvDP,cAAc,CACd;IACDJ,QAAQ,CAACJ,oBAAoB,CAACc,UAAU,CAAC,CAAC;EAC3C,CAAC;AACF,CAAC;AAED,eAAezB,eAAe,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
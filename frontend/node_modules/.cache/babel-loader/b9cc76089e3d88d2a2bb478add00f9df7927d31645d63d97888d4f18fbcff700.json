{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/AudioPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport utils from \"../utils/helper\";\nimport { setAudioUrl } from \"../reducers/audioReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//Possibly delete this\n\nimport Slider from \"@mui/material/Slider\";\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\nimport \"./text.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioPlayer = /*#__PURE__*/_s( /*#__PURE__*/forwardRef(_c = _s((_props, ref) => {\n  _s();\n  const audioName = useSelector(state => state.audioList.current);\n  const audioUrl = useSelector(state => state.audioList.url);\n  const dispatch = useDispatch();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const audioPlayer = useRef(null);\n  useImperativeHandle(ref, () => {\n    return audioPlayer.current;\n  });\n  useEffect(() => {\n    dispatch(setAudioUrl());\n    //Clean up url when dismounting\n    return () => {\n      if (audioUrl) {\n        URL.revokeObjectURL(audioUrl);\n      }\n    };\n  }, [audioName]);\n  const handlePlayClick = () => {\n    setIsPlaying(!isPlaying);\n    isPlaying ? audioPlayer.current.pause() : audioPlayer.current.play();\n  };\n  const onLoadedMetadata = () => {\n    const seconds = Math.floor(audioPlayer.current.duration);\n    setDuration(seconds);\n  };\n  const updateCurrentTime = event => {\n    setCurrentTime(event.currentTarget.currentTime);\n  };\n  const onProgressDrag = event => {\n    if (isPlaying) {\n      handlePlayClick();\n    }\n    audioPlayer.current.currentTime = event.target.value;\n  };\n  const onProgressDragStop = event => {\n    if (!isPlaying) {\n      handlePlayClick();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioPlayer,\n      onTimeUpdate: updateCurrentTime,\n      src: audioUrl,\n      type: \"audio/ogg\"\n      //Wait for metadata before setting duration\n      ,\n      preload: \"metadata\",\n      onLoadedMetadata: onLoadedMetadata,\n      onEnded: handlePlayClick,\n      children: \"cannot play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayClick,\n        children: isPlaying ? \"pause\" : \"play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: utils.formatTime(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Slider, {\n        value: currentTime,\n        onChange: onProgressDrag,\n        onChangeCommitted: onProgressDragStop,\n        defaultValue: 0\n        // style={{ width: \"100%\" }}\n        ,\n        max: duration\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: utils.formatTime(duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}, \"l83JjSZDKzeAvxEk08I26PiAuMI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n})), \"l83JjSZDKzeAvxEk08I26PiAuMI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c2 = AudioPlayer;\nexport default AudioPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AudioPlayer$forwardRef\");\n$RefreshReg$(_c2, \"AudioPlayer\");","map":{"version":3,"names":["React","forwardRef","useEffect","useImperativeHandle","useRef","useState","utils","setAudioUrl","useDispatch","useSelector","Slider","Button","Stack","AudioPlayer","_props","ref","audioName","state","audioList","current","audioUrl","url","dispatch","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","audioPlayer","URL","revokeObjectURL","handlePlayClick","pause","play","onLoadedMetadata","seconds","Math","floor","updateCurrentTime","event","currentTarget","onProgressDrag","target","value","onProgressDragStop","formatTime"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/AudioPlayer.js"],"sourcesContent":["import React, {\n\tforwardRef,\n\tuseEffect,\n\tuseImperativeHandle,\n\tuseRef,\n\tuseState,\n} from \"react\";\n\nimport utils from \"../utils/helper\";\nimport { setAudioUrl } from \"../reducers/audioReducer\";\nimport { useDispatch, useSelector } from \"react-redux\";\n//Possibly delete this\n\nimport Slider from \"@mui/material/Slider\";\n\nimport Button from \"@mui/material/Button\";\nimport Stack from \"@mui/material/Stack\";\n\nimport \"./text.css\";\n\nconst AudioPlayer = forwardRef((_props, ref) => {\n\tconst audioName = useSelector((state) => state.audioList.current);\n\tconst audioUrl = useSelector((state) => state.audioList.url);\n\n\tconst dispatch = useDispatch();\n\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [duration, setDuration] = useState(0);\n\tconst [currentTime, setCurrentTime] = useState(0);\n\n\tconst audioPlayer = useRef(null);\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn audioPlayer.current;\n\t});\n\n\tuseEffect(() => {\n\t\tdispatch(setAudioUrl());\n\t\t//Clean up url when dismounting\n\t\treturn () => {\n\t\t\tif (audioUrl) {\n\t\t\t\tURL.revokeObjectURL(audioUrl);\n\t\t\t}\n\t\t};\n\t}, [audioName]);\n\n\tconst handlePlayClick = () => {\n\t\tsetIsPlaying(!isPlaying);\n\t\tisPlaying ? audioPlayer.current.pause() : audioPlayer.current.play();\n\t};\n\n\tconst onLoadedMetadata = () => {\n\t\tconst seconds = Math.floor(audioPlayer.current.duration);\n\t\tsetDuration(seconds);\n\t};\n\n\tconst updateCurrentTime = (event) => {\n\t\tsetCurrentTime(event.currentTarget.currentTime);\n\t};\n\n\tconst onProgressDrag = (event) => {\n\t\tif (isPlaying) {\n\t\t\thandlePlayClick();\n\t\t}\n\t\taudioPlayer.current.currentTime = event.target.value;\n\t};\n\n\tconst onProgressDragStop = (event) => {\n\t\tif (!isPlaying) {\n\t\t\thandlePlayClick();\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<audio\n\t\t\t\tref={audioPlayer}\n\t\t\t\tonTimeUpdate={updateCurrentTime}\n\t\t\t\tsrc={audioUrl}\n\t\t\t\ttype=\"audio/ogg\"\n\t\t\t\t//Wait for metadata before setting duration\n\t\t\t\tpreload=\"metadata\"\n\t\t\t\tonLoadedMetadata={onLoadedMetadata}\n\t\t\t\tonEnded={handlePlayClick}\n\t\t\t>\n\t\t\t\tcannot play\n\t\t\t</audio>\n\n\t\t\t<Stack direction=\"row\">\n\t\t\t\t<button onClick={handlePlayClick}>\n\t\t\t\t\t{isPlaying ? \"pause\" : \"play\"}\n\t\t\t\t</button>\n\n\t\t\t\t<p>{utils.formatTime(currentTime)}</p>\n\n\t\t\t\t<Slider\n\t\t\t\t\tvalue={currentTime}\n\t\t\t\t\tonChange={onProgressDrag}\n\t\t\t\t\tonChangeCommitted={onProgressDragStop}\n\t\t\t\t\tdefaultValue={0}\n\t\t\t\t\t// style={{ width: \"100%\" }}\n\t\t\t\t\tmax={duration}\n\t\t\t\t/>\n\n\t\t\t\t<p>{utils.formatTime(duration)}</p>\n\t\t\t</Stack>\n\t\t</>\n\t);\n});\n\nexport default AudioPlayer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
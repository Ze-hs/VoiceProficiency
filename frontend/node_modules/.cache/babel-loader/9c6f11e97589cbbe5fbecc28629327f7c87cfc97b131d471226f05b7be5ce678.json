{"ast":null,"code":"const formatTime = seconds => {\n  let min = Math.floor(seconds / 60);\n  min = min >= 10 ? min : \"0\" + min;\n  let sec = Math.floor(sec % 60);\n  sec = sec >= 10 ? sec : \"0\" + sec;\n  return min + \":\" + sec;\n};\nconst formatTranscript = transcript => {\n  return transcript.reduce((prev, curr) => {\n    return prev.concat(curr.words);\n  }, []);\n};\nexport default {\n  formatTime,\n  formatTranscript\n};","map":{"version":3,"names":["formatTime","seconds","min","Math","floor","sec","formatTranscript","transcript","reduce","prev","curr","concat","words"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/utils/helper.js"],"sourcesContent":["const formatTime = (seconds) => {\n\tlet min = Math.floor(seconds / 60);\n\tmin = min >= 10 ? min : \"0\" + min;\n\tlet sec = Math.floor(sec % 60);\n\tsec = sec >= 10 ? sec : \"0\" + sec;\n\treturn min + \":\" + sec;\n};\n\nconst formatTranscript = (transcript) => {\n\treturn transcript.reduce((prev, curr) => {\n\t\treturn prev.concat(curr.words);\n\t}, []);\n};\n\nexport default { formatTime, formatTranscript };\n"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,OAAO,IAAK;EAC/B,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;EAClCC,GAAG,GAAGA,GAAG,IAAI,EAAE,GAAGA,GAAG,GAAG,GAAG,GAAGA,GAAG;EACjC,IAAIG,GAAG,GAAGF,IAAI,CAACC,KAAK,CAACC,GAAG,GAAG,EAAE,CAAC;EAC9BA,GAAG,GAAGA,GAAG,IAAI,EAAE,GAAGA,GAAG,GAAG,GAAG,GAAGA,GAAG;EACjC,OAAOH,GAAG,GAAG,GAAG,GAAGG,GAAG;AACvB,CAAC;AAED,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;EACxC,OAAOA,UAAU,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAK;IACxC,OAAOD,IAAI,CAACE,MAAM,CAACD,IAAI,CAACE,KAAK,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;AACP,CAAC;AAED,eAAe;EAAEZ,UAAU;EAAEM;AAAiB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
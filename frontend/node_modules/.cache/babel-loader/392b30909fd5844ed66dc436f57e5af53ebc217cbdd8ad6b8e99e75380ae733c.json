{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcript = _ref => {\n  _s();\n  let {\n    audioPlayerRef\n  } = _ref;\n  const [transcript, setTranscript] = useState([]);\n  const wordsRef = useRef(null);\n  const [highlightPos, setHighlightPos] = useState(null);\n\n  //change this once backend is finalized\n  useEffect(() => {\n    setTranscript(utils.formatTranscript(transcriptData.segments));\n  }, []);\n  useEffect(() => {\n    const playerCur = audioPlayerRef.current;\n    const ontimeupdate = () => {\n      const activeWordIndex = transcript.findIndex(word => {\n        return word.start >= audioPlayerRef.current.currentTime;\n      });\n      if (activeWordIndex !== -1) {\n        const activeWord = wordsRef.current.childNodes[activeWordIndex];\n        setHighlightPos(getWordProperty(activeWord));\n        console.log(activeWord.getBoundingClientRect());\n      }\n    };\n    if (audioPlayerRef && audioPlayerRef.current) {\n      playerCur.addEventListener(\"timeupdate\", ontimeupdate);\n    }\n    return () => {\n      playerCur.removeEventListener(\"timeupdate\", ontimeupdate);\n    };\n  }, [audioPlayerRef, transcript]);\n  const getWordProperty = _ref2 => {\n    let {\n      width,\n      height,\n      top,\n      left\n    } = _ref2;\n    return {\n      width,\n      height,\n      top,\n      left\n    };\n  };\n  const getConfidenceStyle = confidence => {\n    // return confidence;\n  };\n  const onWordClick = word => {\n    console.log(word);\n    audioPlayerRef.current.currentTime = word.start;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wordsRef,\n      style: {\n        position: \"relative\",\n        padding: \"10%\"\n      },\n      children: [data.segments.map(wordsArr => wordsArr.words.map(words => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => onWordClick(words),\n        className: getConfidenceStyle(words.probability),\n        style: {\n          padding: 0,\n          margin: 0\n        },\n        children: words.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this))), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight\",\n        style: {\n          ...highlightPos\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n_s(Transcript, \"01fUBB1t5gNSZBHczYecay2aeCQ=\");\n_c = Transcript;\nexport default Transcript;\nvar _c;\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"names":["React","useEffect","useRef","useState","transcriptData","utils","data","Transcript","audioPlayerRef","transcript","setTranscript","wordsRef","highlightPos","setHighlightPos","formatTranscript","segments","playerCur","current","ontimeupdate","activeWordIndex","findIndex","word","start","currentTime","activeWord","childNodes","getWordProperty","console","log","getBoundingClientRect","addEventListener","removeEventListener","width","height","top","left","getConfidenceStyle","confidence","onWordClick","position","padding","map","wordsArr","words","probability","margin"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\n\nconst Transcript = ({ audioPlayerRef }) => {\n\tconst [transcript, setTranscript] = useState([]);\n\tconst wordsRef = useRef(null);\n\tconst [highlightPos, setHighlightPos] = useState(null);\n\n\t//change this once backend is finalized\n\tuseEffect(() => {\n\t\tsetTranscript(utils.formatTranscript(transcriptData.segments));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst playerCur = audioPlayerRef.current;\n\n\t\tconst ontimeupdate = () => {\n\t\t\tconst activeWordIndex = transcript.findIndex((word) => {\n\t\t\t\treturn word.start >= audioPlayerRef.current.currentTime;\n\t\t\t});\n\n\t\t\tif (activeWordIndex !== -1) {\n\t\t\t\tconst activeWord = wordsRef.current.childNodes[activeWordIndex];\n\t\t\t\tsetHighlightPos(getWordProperty(activeWord));\n\t\t\t\tconsole.log(activeWord.getBoundingClientRect());\n\t\t\t}\n\t\t};\n\n\t\tif (audioPlayerRef && audioPlayerRef.current) {\n\t\t\tplayerCur.addEventListener(\"timeupdate\", ontimeupdate);\n\t\t}\n\n\t\treturn () => {\n\t\t\tplayerCur.removeEventListener(\"timeupdate\", ontimeupdate);\n\t\t};\n\t}, [audioPlayerRef, transcript]);\n\n\tconst getWordProperty = ({ width, height, top, left }) => {\n\t\treturn {\n\t\t\twidth,\n\t\t\theight,\n\t\t\ttop,\n\t\t\tleft,\n\t\t};\n\t};\n\n\tconst getConfidenceStyle = (confidence) => {\n\t\t// return confidence;\n\t};\n\n\tconst onWordClick = (word) => {\n\t\tconsole.log(word);\n\t\taudioPlayerRef.current.currentTime = word.start;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div\n\t\t\t\tref={wordsRef}\n\t\t\t\tstyle={{ position: \"relative\", padding: \"10%\" }}\n\t\t\t>\n\t\t\t\t{data.segments.map((wordsArr) =>\n\t\t\t\t\twordsArr.words.map((words) => (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tonClick={() => onWordClick(words)}\n\t\t\t\t\t\t\tclassName={getConfidenceStyle(words.probability)}\n\t\t\t\t\t\t\tstyle={{ padding: 0, margin: 0 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{words.word}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t))\n\t\t\t\t)}\n\t\t\t\t<div className=\"highlight\" style={{ ...highlightPos }}></div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Transcript;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,KAAK,MAAM,iBAAiB;;AAEnC;AACA,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAExC,MAAMC,UAAU,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMQ,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAF,SAAS,CAAC,MAAM;IACfS,aAAa,CAACL,KAAK,CAACS,gBAAgB,CAACV,cAAc,CAACW,QAAQ,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACf,MAAMe,SAAS,GAAGR,cAAc,CAACS,OAAO;IAExC,MAAMC,YAAY,GAAG,MAAM;MAC1B,MAAMC,eAAe,GAAGV,UAAU,CAACW,SAAS,CAAEC,IAAI,IAAK;QACtD,OAAOA,IAAI,CAACC,KAAK,IAAId,cAAc,CAACS,OAAO,CAACM,WAAW;MACxD,CAAC,CAAC;MAEF,IAAIJ,eAAe,KAAK,CAAC,CAAC,EAAE;QAC3B,MAAMK,UAAU,GAAGb,QAAQ,CAACM,OAAO,CAACQ,UAAU,CAACN,eAAe,CAAC;QAC/DN,eAAe,CAACa,eAAe,CAACF,UAAU,CAAC,CAAC;QAC5CG,OAAO,CAACC,GAAG,CAACJ,UAAU,CAACK,qBAAqB,EAAE,CAAC;MAChD;IACD,CAAC;IAED,IAAIrB,cAAc,IAAIA,cAAc,CAACS,OAAO,EAAE;MAC7CD,SAAS,CAACc,gBAAgB,CAAC,YAAY,EAAEZ,YAAY,CAAC;IACvD;IAEA,OAAO,MAAM;MACZF,SAAS,CAACe,mBAAmB,CAAC,YAAY,EAAEb,YAAY,CAAC;IAC1D,CAAC;EACF,CAAC,EAAE,CAACV,cAAc,EAAEC,UAAU,CAAC,CAAC;EAEhC,MAAMiB,eAAe,GAAG,SAAkC;IAAA,IAAjC;MAAEM,KAAK;MAAEC,MAAM;MAAEC,GAAG;MAAEC;IAAK,CAAC;IACpD,OAAO;MACNH,KAAK;MACLC,MAAM;MACNC,GAAG;MACHC;IACD,CAAC;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;IAC1C;EAAA,CACA;EAED,MAAMC,WAAW,GAAIjB,IAAI,IAAK;IAC7BM,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACjBb,cAAc,CAACS,OAAO,CAACM,WAAW,GAAGF,IAAI,CAACC,KAAK;EAChD,CAAC;EAED,oBACC;IAAA,uBACC;MACC,GAAG,EAAEX,QAAS;MACd,KAAK,EAAE;QAAE4B,QAAQ,EAAE,UAAU;QAAEC,OAAO,EAAE;MAAM,CAAE;MAAA,WAE/ClC,IAAI,CAACS,QAAQ,CAAC0B,GAAG,CAAEC,QAAQ,IAC3BA,QAAQ,CAACC,KAAK,CAACF,GAAG,CAAEE,KAAK,iBACxB;QACC,OAAO,EAAE,MAAML,WAAW,CAACK,KAAK,CAAE;QAClC,SAAS,EAAEP,kBAAkB,CAACO,KAAK,CAACC,WAAW,CAAE;QACjD,KAAK,EAAE;UAAEJ,OAAO,EAAE,CAAC;UAAEK,MAAM,EAAE;QAAE,CAAE;QAAA,UAEhCF,KAAK,CAACtB;MAAI;QAAA;QAAA;QAAA;MAAA,QAEZ,CAAC,CACF,eACD;QAAK,SAAS,EAAC,WAAW;QAAC,KAAK,EAAE;UAAE,GAAGT;QAAa;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EACxD;IAAA;IAAA;IAAA;EAAA,QACD;AAER,CAAC;AAAC,GAzEIL,UAAU;AAAA,KAAVA,UAAU;AA2EhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
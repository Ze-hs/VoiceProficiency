{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcript = _ref => {\n  _s();\n  let {\n    audioPlayerRef\n  } = _ref;\n  const [transcript, setTranscript] = useState([]);\n  const wordsRef = useRef(null);\n  const [highlightPos, setHighlightPos] = useState(null);\n\n  //change this once backend is finalized\n  useEffect(() => {\n    setTranscript(utils.formatTranscript(transcriptData.segments));\n  }, []);\n  useEffect(() => {\n    const playerCur = audioPlayerRef.current;\n    const ontimeupdate = () => {\n      const activeWordIndex = transcript.findIndex(word => {\n        return word.start >= audioPlayerRef.current.currentTime;\n      });\n      if (activeWordIndex !== -1) {\n        const activeWord = wordsRef.current.childNodes[activeWordIndex];\n        setHighlightPos(getWordProperty(wordsRef.current.getBoundingClientRect(), activeWord.getBoundingClientRect()));\n      }\n    };\n    if (audioPlayerRef && audioPlayerRef.current) {\n      playerCur.addEventListener(\"timeupdate\", ontimeupdate);\n    }\n    return () => {\n      playerCur.removeEventListener(\"timeupdate\", ontimeupdate);\n    };\n  }, [audioPlayerRef, transcript]);\n  const getWordProperty = (parent, child) => {\n    return {\n      width: child.width,\n      height: child.height,\n      top: parent.top - child.top,\n      left: parent.left - child.left\n    };\n  };\n  const getConfidenceStyle = confidence => {\n    // return confidence;\n  };\n  const onWordClick = word => {\n    audioPlayerRef.current.currentTime = word.start;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wordsRef,\n    style: {\n      position: \"relative\"\n    },\n    children: [data.segments.map(wordsArr => wordsArr.words.map(words => /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: () => onWordClick(words),\n      className: getConfidenceStyle(words.probability),\n      style: {\n        padding: 0,\n        margin: 0\n      },\n      children: words.word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }, this))), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlight\",\n      style: {\n        ...highlightPos,\n        position: \"absolute\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n_s(Transcript, \"01fUBB1t5gNSZBHczYecay2aeCQ=\");\n_c = Transcript;\nexport default Transcript;\nvar _c;\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"names":["React","useEffect","useRef","useState","transcriptData","utils","data","Transcript","audioPlayerRef","transcript","setTranscript","wordsRef","highlightPos","setHighlightPos","formatTranscript","segments","playerCur","current","ontimeupdate","activeWordIndex","findIndex","word","start","currentTime","activeWord","childNodes","getWordProperty","getBoundingClientRect","addEventListener","removeEventListener","parent","child","width","height","top","left","getConfidenceStyle","confidence","onWordClick","position","map","wordsArr","words","probability","padding","margin"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport transcriptData from \"../audio/Sample.json\";\nimport utils from \"../utils/helper\";\n\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\n\nconst Transcript = ({ audioPlayerRef }) => {\n\tconst [transcript, setTranscript] = useState([]);\n\tconst wordsRef = useRef(null);\n\tconst [highlightPos, setHighlightPos] = useState(null);\n\n\t//change this once backend is finalized\n\tuseEffect(() => {\n\t\tsetTranscript(utils.formatTranscript(transcriptData.segments));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst playerCur = audioPlayerRef.current;\n\n\t\tconst ontimeupdate = () => {\n\t\t\tconst activeWordIndex = transcript.findIndex((word) => {\n\t\t\t\treturn word.start >= audioPlayerRef.current.currentTime;\n\t\t\t});\n\n\t\t\tif (activeWordIndex !== -1) {\n\t\t\t\tconst activeWord = wordsRef.current.childNodes[activeWordIndex];\n\t\t\t\tsetHighlightPos(\n\t\t\t\t\tgetWordProperty(\n\t\t\t\t\t\twordsRef.current.getBoundingClientRect(),\n\t\t\t\t\t\tactiveWord.getBoundingClientRect()\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tif (audioPlayerRef && audioPlayerRef.current) {\n\t\t\tplayerCur.addEventListener(\"timeupdate\", ontimeupdate);\n\t\t}\n\n\t\treturn () => {\n\t\t\tplayerCur.removeEventListener(\"timeupdate\", ontimeupdate);\n\t\t};\n\t}, [audioPlayerRef, transcript]);\n\n\tconst getWordProperty = (parent, child) => {\n\t\treturn {\n\t\t\twidth: child.width,\n\t\t\theight: child.height,\n\t\t\ttop: parent.top - child.top,\n\t\t\tleft: parent.left - child.left,\n\t\t};\n\t};\n\n\tconst getConfidenceStyle = (confidence) => {\n\t\t// return confidence;\n\t};\n\n\tconst onWordClick = (word) => {\n\t\taudioPlayerRef.current.currentTime = word.start;\n\t};\n\n\treturn (\n\t\t<div ref={wordsRef} style={{ position: \"relative\" }}>\n\t\t\t{data.segments.map((wordsArr) =>\n\t\t\t\twordsArr.words.map((words) => (\n\t\t\t\t\t<span\n\t\t\t\t\t\tonClick={() => onWordClick(words)}\n\t\t\t\t\t\tclassName={getConfidenceStyle(words.probability)}\n\t\t\t\t\t\tstyle={{ padding: 0, margin: 0 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{words.word}\n\t\t\t\t\t</span>\n\t\t\t\t))\n\t\t\t)}\n\t\t\t<div\n\t\t\t\tclassName=\"highlight\"\n\t\t\t\tstyle={{ ...highlightPos, position: \"absolute\" }}\n\t\t\t></div>\n\t\t</div>\n\t);\n};\n\nexport default Transcript;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
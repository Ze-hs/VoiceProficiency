{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js\";\nimport React from \"react\";\n\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Transcript = _ref => {\n  let {\n    audioPlayerRef\n  } = _ref;\n  // console.log(data);\n  // console.log(\"hi\");\n\n  // console.log(JSON.parse(segments));\n\n  // data.segments.map((wordsArr) =>\n  // \twordsArr.words.map((words) => console.log(words.word))\n  // );\n\n  const getConfidenceStyle = confidence => {\n    console.log(confidence);\n    // return confidence;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.segments.map(wordsArr => wordsArr.words.map(words => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: getConfidenceStyle(words.probability),\n      children: words.word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }, this)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n};\n_c = Transcript;\nexport default Transcript;\nvar _c;\n$RefreshReg$(_c, \"Transcript\");","map":{"version":3,"names":["React","data","Transcript","audioPlayerRef","getConfidenceStyle","confidence","console","log","segments","map","wordsArr","words","probability","word"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/Transcript.js"],"sourcesContent":["import React from \"react\";\n\n//Testing purposes delete late\nimport data from \"../audio/Sample.json\";\n\nconst Transcript = ({ audioPlayerRef }) => {\n\t// console.log(data);\n\t// console.log(\"hi\");\n\n\t// console.log(JSON.parse(segments));\n\n\t// data.segments.map((wordsArr) =>\n\t// \twordsArr.words.map((words) => console.log(words.word))\n\t// );\n\n\tconst getConfidenceStyle = (confidence) => {\n\t\tconsole.log(confidence);\n\t\t// return confidence;\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{data.segments.map((wordsArr) =>\n\t\t\t\twordsArr.words.map((words) => (\n\t\t\t\t\t<span className={getConfidenceStyle(words.probability)}>\n\t\t\t\t\t\t{words.word}\n\t\t\t\t\t</span>\n\t\t\t\t))\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Transcript;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAOC,IAAI,MAAM,sBAAsB;AAAC;AAExC,MAAMC,UAAU,GAAG,QAAwB;EAAA,IAAvB;IAAEC;EAAe,CAAC;EACrC;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA,MAAMC,kBAAkB,GAAIC,UAAU,IAAK;IAC1CC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvB;EACD,CAAC;;EAED,oBACC;IAAA,UACEJ,IAAI,CAACO,QAAQ,CAACC,GAAG,CAAEC,QAAQ,IAC3BA,QAAQ,CAACC,KAAK,CAACF,GAAG,CAAEE,KAAK,iBACxB;MAAM,SAAS,EAAEP,kBAAkB,CAACO,KAAK,CAACC,WAAW,CAAE;MAAA,UACrDD,KAAK,CAACE;IAAI;MAAA;MAAA;MAAA;IAAA,QAEZ,CAAC;EACF;IAAA;IAAA;IAAA;EAAA,QACI;AAER,CAAC;AAAC,KA1BIX,UAAU;AA4BhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
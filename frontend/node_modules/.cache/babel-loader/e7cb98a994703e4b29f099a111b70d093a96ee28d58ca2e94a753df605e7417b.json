{"ast":null,"code":"var _jsxFileName = \"/home/ze/Projects/voice_profficiency/frontend/src/components/DropZone.js\",\n  _s = $RefreshSig$();\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropZone = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [fileObjects, setFileObjects] = useState([]);\n  const dialogTitle = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Upload file\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      style: {\n        right: \"12px\",\n        top: \"8px\",\n        position: \"absolute\"\n      },\n      onClick: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n  /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setOpen(true),\n      children: \"Add Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(DropzoneDialogBase, {\n      dialogTitle: dialogTitle(),\n      acceptedFiles: [\"image/*\"],\n      fileObjects: fileObjects,\n      cancelButtonText: \"cancel\",\n      submitButtonText: \"submit\",\n      maxFileSize: 5000000,\n      open: open,\n      onAdd: newFileObjs => {\n        console.log(\"onAdd\", newFileObjs);\n        setFileObjects([].concat(fileObjects, newFileObjs));\n      },\n      onDelete: deleteFileObj => {\n        console.log(\"onDelete\", deleteFileObj);\n      },\n      onClose: () => setOpen(false),\n      onSave: () => {\n        console.log(\"onSave\", fileObjects);\n        setOpen(false);\n      },\n      showPreviews: true,\n      showFileNamesInPreview: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 2\n  }, this);\n};\n_s(DropZone, \"jdavY70jIM0MwmPoWJitfgOkMM4=\");\n_c = DropZone;\nexport default DropZone;\nvar _c;\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"names":["Button","IconButton","CloseIcon","useState","DropZone","open","setOpen","fileObjects","setFileObjects","dialogTitle","right","top","position","newFileObjs","console","log","concat","deleteFileObj"],"sources":["/home/ze/Projects/voice_profficiency/frontend/src/components/DropZone.js"],"sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useState } from \"react\";\n\nconst DropZone = () => {\n\tconst [open, setOpen] = useState(false);\n\tconst [fileObjects, setFileObjects] = useState([]);\n\n\tconst dialogTitle = () => (\n\t\t<>\n\t\t\t<span>Upload file</span>\n\t\t\t<IconButton\n\t\t\t\tstyle={{ right: \"12px\", top: \"8px\", position: \"absolute\" }}\n\t\t\t\tonClick={() => setOpen(false)}\n\t\t\t>\n\t\t\t\t<CloseIcon />\n\t\t\t</IconButton>\n\t\t</>\n\t);\n\n\t<div>\n\t\t<Button\n\t\t\tvariant=\"contained\"\n\t\t\tcolor=\"primary\"\n\t\t\tonClick={() => setOpen(true)}\n\t\t>\n\t\t\tAdd Image\n\t\t</Button>\n\n\t\t<DropzoneDialogBase\n\t\t\tdialogTitle={dialogTitle()}\n\t\t\tacceptedFiles={[\"image/*\"]}\n\t\t\tfileObjects={fileObjects}\n\t\t\tcancelButtonText={\"cancel\"}\n\t\t\tsubmitButtonText={\"submit\"}\n\t\t\tmaxFileSize={5000000}\n\t\t\topen={open}\n\t\t\tonAdd={(newFileObjs) => {\n\t\t\t\tconsole.log(\"onAdd\", newFileObjs);\n\t\t\t\tsetFileObjects([].concat(fileObjects, newFileObjs));\n\t\t\t}}\n\t\t\tonDelete={(deleteFileObj) => {\n\t\t\t\tconsole.log(\"onDelete\", deleteFileObj);\n\t\t\t}}\n\t\t\tonClose={() => setOpen(false)}\n\t\t\tonSave={() => {\n\t\t\t\tconsole.log(\"onSave\", fileObjects);\n\t\t\t\tsetOpen(false);\n\t\t\t}}\n\t\t\tshowPreviews={true}\n\t\t\tshowFileNamesInPreview={true}\n\t\t/>\n\t</div>;\n};\n\nexport default DropZone;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,SAAS,MAAM,0BAA0B;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAEjC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMM,WAAW,GAAG,mBACnB;IAAA,wBACC;MAAA,UAAM;IAAW;MAAA;MAAA;MAAA;IAAA,QAAO,eACxB,QAAC,UAAU;MACV,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,GAAG,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAW,CAAE;MAC3D,OAAO,EAAE,MAAMN,OAAO,CAAC,KAAK,CAAE;MAAA,uBAE9B,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACD;EAAA,gBAEd;EAED;IAAA,wBACC,QAAC,MAAM;MACN,OAAO,EAAC,WAAW;MACnB,KAAK,EAAC,SAAS;MACf,OAAO,EAAE,MAAMA,OAAO,CAAC,IAAI,CAAE;MAAA,UAC7B;IAED;MAAA;MAAA;MAAA;IAAA,QAAS,eAET,QAAC,kBAAkB;MAClB,WAAW,EAAEG,WAAW,EAAG;MAC3B,aAAa,EAAE,CAAC,SAAS,CAAE;MAC3B,WAAW,EAAEF,WAAY;MACzB,gBAAgB,EAAE,QAAS;MAC3B,gBAAgB,EAAE,QAAS;MAC3B,WAAW,EAAE,OAAQ;MACrB,IAAI,EAAEF,IAAK;MACX,KAAK,EAAGQ,WAAW,IAAK;QACvBC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,WAAW,CAAC;QACjCL,cAAc,CAAC,EAAE,CAACQ,MAAM,CAACT,WAAW,EAAEM,WAAW,CAAC,CAAC;MACpD,CAAE;MACF,QAAQ,EAAGI,aAAa,IAAK;QAC5BH,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEE,aAAa,CAAC;MACvC,CAAE;MACF,OAAO,EAAE,MAAMX,OAAO,CAAC,KAAK,CAAE;MAC9B,MAAM,EAAE,MAAM;QACbQ,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAER,WAAW,CAAC;QAClCD,OAAO,CAAC,KAAK,CAAC;MACf,CAAE;MACF,YAAY,EAAE,IAAK;MACnB,sBAAsB,EAAE;IAAK;MAAA;MAAA;MAAA;IAAA,QAC5B;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AACP,CAAC;AAAC,GAjDIF,QAAQ;AAAA,KAARA,QAAQ;AAmDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}